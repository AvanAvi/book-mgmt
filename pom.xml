<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0 "
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance "
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0  
                             https://maven.apache.org/xsd/maven-4.0.0.xsd ">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.5.5</version>
    <relativePath/>
  </parent>

  <groupId>com.attsw.bookstore</groupId>
  <artifactId>bookstore-management-tdd</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>bookstore-management-tdd</name>
  <description>Bookstore Management System with TDD</description>

  <properties>
    <java.version>17</java.version>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>

    <!-- SonarCloud Configuration -->
    <sonar.organization>avanavi</sonar.organization>
    <sonar.host.url>https://sonarcloud.io </sonar.host.url>
    <sonar.projectKey>AvanAvi_book-mgmt</sonar.projectKey>
    <sonar.coverage.exclusions>
      **/BookstoreManagementTddApplication.*,
      **/model/**
    </sonar.coverage.exclusions>
    
    <sonar.tests>
      ${project.basedir}/src/test/java,
      ${project.basedir}/src/it/java,
      ${project.basedir}/src/e2e/java
    </sonar.tests>
    <sonar.junit.reportPaths>
      ${project.build.directory}/surefire-reports,
      ${project.build.directory}/failsafe-reports
    </sonar.junit.reportPaths>

    <!-- Test Execution Control -->
    <skip.unit-tests>false</skip.unit-tests>
    <skip.integration-tests>false</skip.integration-tests>

    <!-- MySQL Configuration for E2E Tests -->
    <mysql.docker.version>5.7</mysql.docker.version>
    <mysql.database>bookstore_e2e</mysql.database>
    <mysql.username>bookstore_user</mysql.username>
    <mysql.password>bookstore_pass</mysql.password>
    
    <!-- Selenium Version -->
    <selenium.version>4.37.0</selenium.version>
  </properties>

  <dependencies>
    <!-- Spring Boot Starters -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-thymeleaf</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <scope>runtime</scope>
      <optional>true</optional>
    </dependency>

    <!-- Production Database -->
    <dependency>
      <groupId>com.mysql</groupId>
      <artifactId>mysql-connector-j</artifactId>
      <scope>runtime</scope>
    </dependency>

    <!-- Testing Dependencies -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-testcontainers</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>mysql</artifactId>
      <scope>test</scope>
    </dependency>
    
    <!-- HTMLUnit for Web Controller Testing -->
    <dependency>
      <groupId>org.htmlunit</groupId>
      <artifactId>htmlunit</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Selenium for E2E Tests -->
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-java</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-devtools-v141</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.github.bonigarcia</groupId>
      <artifactId>webdrivermanager</artifactId>
      <version>5.6.2</version>
      <scope>test</scope>
    </dependency>
    
    <!-- AssertJ for Fluent Assertions -->
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- REST-assured for REST API Testing -->
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <!-- PIT Mutation Testing Configuration -->
        <plugin>
          <groupId>org.pitest</groupId>
          <artifactId>pitest-maven</artifactId>
          <version>1.15.0</version>
          <configuration>
            <targetClasses>
              <param>com.attsw.bookstore.service.*</param>
              <param>com.attsw.bookstore.web.*</param>
            </targetClasses>
            <targetTests>
              <param>com.attsw.bookstore.service.*Test</param>
              <param>com.attsw.bookstore.web.*Test</param>
            </targetTests>
            <excludedTestClasses>
              <param>**/*IT</param>
              <param>**/*E2E</param>
              <param>**/*RepositoryTest</param>
            </excludedTestClasses>
            <excludedClasses>
              <param>com.attsw.bookstore.repository.*</param>
              <param>**/*IT</param>
              <param>**/*E2E</param>
            </excludedClasses>
            <excludedMethods>
              <param>*toString</param>
              <param>*hashCode</param>
            </excludedMethods>
            <avoidCallsTo>
              <avoidCallsTo>java.util.logging</avoidCallsTo>
              <avoidCallsTo>org.apache.log4j</avoidCallsTo>
              <avoidCallsTo>org.slf4j</avoidCallsTo>
              <avoidCallsTo>org.apache.commons.logging</avoidCallsTo>
            </avoidCallsTo>
            <mutators>
              <mutator>DEFAULTS</mutator>
            </mutators>
            <mutationThreshold>100</mutationThreshold>
            <outputFormats>
              <outputFormat>HTML</outputFormat>
              <outputFormat>XML</outputFormat>
            </outputFormats>
            <verbose>true</verbose>
            <timestampedReports>false</timestampedReports>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <!-- Build Helper: Add Integration and E2E Test Sources -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-test-source</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/it/java</source>
                <source>src/e2e/java</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Spring Boot Maven Plugin -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>

      <!-- Surefire: Unit Tests Only -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skipTests>${skip.unit-tests}</skipTests>
          <includes>
            <include>**/*Test.java</include>
          </includes>
          <excludes>
            <exclude>**/*IT.java</exclude>
            <exclude>**/*E2E.java</exclude>
          </excludes>
          <forkedProcessExitTimeoutInSeconds>240</forkedProcessExitTimeoutInSeconds>
          <shutdown>exit</shutdown>
        </configuration>
      </plugin>

      <!-- Failsafe: Integration Tests (excludes E2E) -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <skipTests>${skip.integration-tests}</skipTests>
          <includes>
            <include>**/*IT.java</include>
          </includes>
          <excludes>
            <exclude>**/*E2E.java</exclude>
          </excludes>
          <forkedProcessExitTimeoutInSeconds>240</forkedProcessExitTimeoutInSeconds>
          <shutdown>exit</shutdown>
        </configuration>
      </plugin>

      <!-- JaCoCo: Code Coverage (Unit Tests Only per Book's Rule) -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.11</version>
        <configuration>
          <excludes>
            <exclude>**/BookstoreManagementTddApplication.*</exclude>
            <exclude>**/model/**</exclude>
          </excludes>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Coveralls: Coverage Reporting -->
      <plugin>
        <groupId>org.eluder.coveralls</groupId>
        <artifactId>coveralls-maven-plugin</artifactId>
        <version>4.3.0</version>
        <configuration>
          <repoToken>${env.COVERALLS_REPO_TOKEN}</repoToken>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.3.1</version>
          </dependency>
        </dependencies>
      </plugin>

      <!-- SonarCloud: Static Analysis -->
      <plugin>
        <groupId>org.sonarsource.scanner.maven</groupId>
        <artifactId>sonar-maven-plugin</artifactId>
        <version>4.0.0.4121</version>
      </plugin>
    </plugins>
  </build>

  <!-- ===== PROFILES ===== -->
  <profiles>
    <!-- E2E Tests Profile: Starts MySQL + Spring Boot + Runs Selenium Tests -->
    <profile>
      <id>e2e-tests</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <skip.unit-tests>true</skip.unit-tests>
        <skip.integration-tests>true</skip.integration-tests>
      </properties>
      <build>
        <plugins>
			
		  <!-- Build Helper: Reserve Spring Boot Port Dynamically -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>reserve-tomcat-port</id>
                <goals>
                  <goal>reserve-network-port</goal>
                </goals>
                <phase>process-resources</phase>
                <configuration>
                  <portNames>
                    <portName>e2e.server.port</portName>
                  </portNames>
                </configuration>
              </execution>
            </executions>
          </plugin>	
			
          <!-- Docker: Start MySQL Container -->
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>0.43.4</version>
            <executions>
              <execution>
                <id>start-mysql</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
              </execution>
              <execution>
                <id>stop-mysql</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <images>
                <image>
                  <name>mysql:${mysql.docker.version}</name>
                  <alias>mysql-e2e</alias>
                  <run>
                    <env>
                      <MYSQL_ROOT_PASSWORD>root</MYSQL_ROOT_PASSWORD>
                      <MYSQL_DATABASE>${mysql.database}</MYSQL_DATABASE>
                      <MYSQL_USER>${mysql.username}</MYSQL_USER>
                      <MYSQL_PASSWORD>${mysql.password}</MYSQL_PASSWORD>
                    </env>
                    <ports>
                      <port>mysql.mapped.port:3306</port>
                    </ports>
                    <wait>
                      <log>.*mysqld: ready for connections.*</log>
                      <time>120000</time>
                      <exec>
                        <postStart>sleep 10</postStart>
                      </exec>
                    </wait>
                  </run>
                </image>
              </images>
            </configuration>
          </plugin>

          <!-- Spring Boot: Start Application -->
          <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>pre-integration-test</id>
                <goals>
                  <goal>start</goal>
                </goals>
                <configuration>
                  <wait>60000</wait>
                  <maxAttempts>30</maxAttempts>
                  <arguments>
                    <argument>--server.port=${e2e.server.port}</argument>
                    <argument>--spring.datasource.url=jdbc:mysql://127.0.0.1:${mysql.mapped.port}/${mysql.database}?useSSL=false&amp;allowPublicKeyRetrieval=true&amp;serverTimezone=UTC</argument>
                    <argument>--spring.datasource.username=${mysql.username}</argument>
                    <argument>--spring.datasource.password=${mysql.password}</argument>
                  </arguments>
                </configuration>
              </execution>
              <execution>
                <id>post-integration-test</id>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <!-- Failsafe: Run E2E Tests -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <executions>
              <execution>
                <id>e2e-tests</id>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
                <configuration>
                  <skipTests>false</skipTests>
                  <includes>
                    <include>**/*E2E.java</include>
                  </includes>
                  <excludes>
                    <exclude>**/*IT.java</exclude>
                  </excludes>
                  <systemPropertyVariables>
                    <server.port>${e2e.server.port}</server.port>
                  </systemPropertyVariables>
                  <forkedProcessExitTimeoutInSeconds>240</forkedProcessExitTimeoutInSeconds>
                  <shutdown>exit</shutdown>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- Mutation Testing Profile: PITest Only -->
    <profile>
      <id>mutation-testing</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <skip.integration-tests>true</skip.integration-tests>
      </properties>
      <build>
        <plugins>
          <!-- Skip Failsafe During Mutation Testing -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <skip>true</skip>
            </configuration>
          </plugin>

          <!-- PITest: Mutation Coverage -->
          <plugin>
            <groupId>org.pitest</groupId>
            <artifactId>pitest-maven</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>mutationCoverage</goal>
                </goals>
                <phase>verify</phase>
              </execution>
            </executions>
            <dependencies>
              <dependency>
                <groupId>org.pitest</groupId>
                <artifactId>pitest-junit5-plugin</artifactId>
                <version>1.2.2</version>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- Docker Profile: Manual MySQL Control (for Eclipse/IDE) -->
    <profile>
      <id>docker</id>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>0.43.4</version>
            <executions>
              <execution>
                <id>start-mysql</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
              </execution>
              <execution>
                <id>stop-mysql</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <images>
                <image>
                  <name>mysql:${mysql.docker.version}</name>
                  <alias>mysql-docker</alias>
                  <run>
                    <env>
                      <MYSQL_ROOT_PASSWORD>root</MYSQL_ROOT_PASSWORD>
                      <MYSQL_DATABASE>${mysql.database}</MYSQL_DATABASE>
                      <MYSQL_USER>${mysql.username}</MYSQL_USER>
                      <MYSQL_PASSWORD>${mysql.password}</MYSQL_PASSWORD>
                    </env>
                    <ports>
                      <port>mysql.mapped.port:3306</port>
                    </ports>
                    <wait>
                      <tcp>
                        <mode>mapped</mode>
                        <ports>
                          <port>3306</port>
                        </ports>
                      </tcp>
                      <time>120000</time>
                      <exec>
                        <postStart>sleep 30</postStart>
                      </exec>
                    </wait>
                  </run>
                </image>
              </images>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>