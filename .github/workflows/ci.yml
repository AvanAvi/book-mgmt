name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    # 1. Checkout with full history for SonarCloud
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    # 2. Setup Java 17
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    # 3. Cache Maven dependencies
    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml', '**/*.yml') }}
        restore-keys: ${{ runner.os }}-m2-
    
    # 4. Cache SonarCloud packages
    - name: Cache SonarCloud packages
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    
    # 5. Run unit and integration tests 
    - name: Run unit and integration tests
      run: mvn -B clean verify
    
    # 6. Upload coverage to Coveralls (immediately after tests)
    - name: Upload coverage to Coveralls
      run: mvn -B coveralls:report
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
      if: ${{ success() && github.event_name == 'push' }}
    
    # 7. Generate test reports (always, even on failure)
    - name: Generate JUnit Report
      run: mvn -B surefire-report:report-only
      if: ${{ always() }}
    
    # 8. Archive test reports as artifacts
    - name: Archive Test Reports
      uses: actions/upload-artifact@v4
      if: ${{ always() }}
      with:
        name: test-reports
        path: |
          **/target/site
          **/target/surefire-reports
          **/target/failsafe-reports
    
    # 9. Run E2E tests (separate step)
    - name: Run E2E tests
      run: mvn -B verify -Pe2e-tests
    
    # 10. Build Docker image (after all tests pass)
    - name: Build Docker image
      run: docker build -t bookstore-management-tdd:${{ github.sha }} .
    
    # 11. SonarCloud analysis (last)
    - name: SonarCloud analysis
      run: mvn -B sonar:sonar -Dsonar.token=${{ secrets.SONAR_TOKEN }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      if: ${{ success() }}